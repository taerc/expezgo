// Code generated by ent, DO NOT EDIT.

package ent

import (
	"expezgo/pkg/ent/licence"
	"expezgo/pkg/ent/schema"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	licenceFields := schema.Licence{}.Fields()
	_ = licenceFields
	// licenceDescDevUUID is the schema descriptor for dev_uuid field.
	licenceDescDevUUID := licenceFields[1].Descriptor()
	// licence.DevUUIDValidator is a validator for the "dev_uuid" field. It is called by the builders before save.
	licence.DevUUIDValidator = licenceDescDevUUID.Validators[0].(func(string) error)
	// licenceDescLicPath is the schema descriptor for lic_path field.
	licenceDescLicPath := licenceFields[2].Descriptor()
	// licence.LicPathValidator is a validator for the "lic_path" field. It is called by the builders before save.
	licence.LicPathValidator = licenceDescLicPath.Validators[0].(func(string) error)
	// licenceDescState is the schema descriptor for state field.
	licenceDescState := licenceFields[3].Descriptor()
	// licence.DefaultState holds the default value on creation for the state field.
	licence.DefaultState = licenceDescState.Default.(int)
	// licenceDescTaskID is the schema descriptor for task_id field.
	licenceDescTaskID := licenceFields[4].Descriptor()
	// licence.DefaultTaskID holds the default value on creation for the task_id field.
	licence.DefaultTaskID = licenceDescTaskID.Default.(string)
	// licence.TaskIDValidator is a validator for the "task_id" field. It is called by the builders before save.
	licence.TaskIDValidator = licenceDescTaskID.Validators[0].(func(string) error)
}
